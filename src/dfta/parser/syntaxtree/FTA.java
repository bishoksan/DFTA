//
// Generated by JTB 1.3.2
//

package dfta.parser.syntaxtree;

/**
 * Grammar production:
 * f0 -> ( FinalStates() )?
 * f1 -> ( <TRANSITIONS> <FULLSTOP> )?
 * f2 -> Delta()
 * f3 -> <EOF>
 */
public class FTA implements Node {
   public NodeOptional f0;
   public NodeOptional f1;
   public Delta f2;
   public NodeToken f3;

   public FTA(NodeOptional n0, NodeOptional n1, Delta n2, NodeToken n3) {
      f0 = n0;
      f1 = n1;
      f2 = n2;
      f3 = n3;
   }

   public FTA(NodeOptional n0, NodeOptional n1, Delta n2) {
      f0 = n0;
      f1 = n1;
      f2 = n2;
      f3 = new NodeToken("");
   }

   public void accept(dfta.parser.visitor.Visitor v) {
      v.visit(this);
   }
   public <R,A> R accept(dfta.parser.visitor.GJVisitor<R,A> v, A argu) {
      return v.visit(this,argu);
   }
   public <R> R accept(dfta.parser.visitor.GJNoArguVisitor<R> v) {
      return v.visit(this);
   }
   public <A> void accept(dfta.parser.visitor.GJVoidVisitor<A> v, A argu) {
      v.visit(this,argu);
   }
}

